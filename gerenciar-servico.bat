@echo off
echo ======================================================
echo üéõÔ∏è GERENCIADOR DE SERVI√áO - GYM PULSE SYSTEM
echo ======================================================

set SERVICE_NAME=GymPulseSystem

REM Verificar se est√° executando como administrador
net session >nul 2>&1
if %errorLevel% == 0 (
    echo ‚úÖ Executando como Administrador
) else (
    echo ‚ùå ERRO: Execute como Administrador!
    echo Clique com o bot√£o direito e "Executar como administrador"
    pause
    exit /b 1
)

:MENU
echo.
echo üéØ Escolha uma op√ß√£o:
echo.
echo [1] ‚ñ∂Ô∏è  Iniciar servi√ßo
echo [2] ‚èπÔ∏è  Parar servi√ßo
echo [3] üîÑ Reiniciar servi√ßo
echo [4] üìä Status do servi√ßo
echo [5] üóëÔ∏è Desinstalar servi√ßo
echo [6] üìù Ver logs em tempo real
echo [7] üß™ Testar aplica√ß√£o
echo [8] üö™ Sair
echo.
set /p choice="Digite sua escolha (1-8): "

if "%choice%"=="1" goto START_SERVICE
if "%choice%"=="2" goto STOP_SERVICE
if "%choice%"=="3" goto RESTART_SERVICE
if "%choice%"=="4" goto STATUS_SERVICE
if "%choice%"=="5" goto UNINSTALL_SERVICE
if "%choice%"=="6" goto VIEW_LOGS
if "%choice%"=="7" goto TEST_APP
if "%choice%"=="8" goto EXIT
echo ‚ùå Op√ß√£o inv√°lida!
goto MENU

:START_SERVICE
echo.
echo ‚ñ∂Ô∏è Iniciando servi√ßo %SERVICE_NAME%...
sc start "%SERVICE_NAME%"
if %errorlevel% == 0 (
    echo ‚úÖ Servi√ßo iniciado com sucesso
    echo ‚è≥ Aguardando inicializa√ß√£o...
    timeout /t 5 /nobreak >nul
    echo üåê Testando aplica√ß√£o...
    powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:3000/api/health' -TimeoutSec 10; Write-Host '‚úÖ Aplica√ß√£o respondendo corretamente' } catch { Write-Host '‚ö†Ô∏è Aplica√ß√£o ainda inicializando ou com problemas' }"
) else (
    echo ‚ùå Erro ao iniciar servi√ßo
)
goto MENU

:STOP_SERVICE
echo.
echo ‚èπÔ∏è Parando servi√ßo %SERVICE_NAME%...
sc stop "%SERVICE_NAME%"
if %errorlevel% == 0 (
    echo ‚úÖ Servi√ßo parado com sucesso
) else (
    echo ‚ùå Erro ao parar servi√ßo (pode j√° estar parado)
)
goto MENU

:RESTART_SERVICE
echo.
echo üîÑ Reiniciando servi√ßo %SERVICE_NAME%...
echo ‚èπÔ∏è Parando servi√ßo...
sc stop "%SERVICE_NAME%" >nul 2>&1
timeout /t 3 /nobreak >nul
echo ‚ñ∂Ô∏è Iniciando servi√ßo...
sc start "%SERVICE_NAME%"
if %errorlevel% == 0 (
    echo ‚úÖ Servi√ßo reiniciado com sucesso
    echo ‚è≥ Aguardando inicializa√ß√£o...
    timeout /t 5 /nobreak >nul
    echo üåê Testando aplica√ß√£o...
    powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:3000/api/health' -TimeoutSec 10; Write-Host '‚úÖ Aplica√ß√£o respondendo ap√≥s reinicializa√ß√£o' } catch { Write-Host '‚ö†Ô∏è Aplica√ß√£o ainda inicializando' }"
) else (
    echo ‚ùå Erro ao reiniciar servi√ßo
)
goto MENU

:STATUS_SERVICE
echo.
echo üìä Status detalhado do servi√ßo:
echo.
sc query "%SERVICE_NAME%"
echo.
echo üåê Verificando porta 3000...
netstat -an | find ":3000" | find "LISTENING" >nul
if %errorlevel% == 0 (
    echo ‚úÖ Porta 3000 est√° ativa
) else (
    echo ‚ùå Porta 3000 n√£o est√° ativa
)
echo.
echo üîó Testando API rapidamente...
powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:3000/api/health' -TimeoutSec 5; Write-Host '‚úÖ API respondendo:', $response.StatusCode } catch { Write-Host '‚ùå API n√£o est√° respondendo' }"
goto MENU

:UNINSTALL_SERVICE
echo.
echo ‚ö†Ô∏è ATEN√á√ÉO: Isso ir√° desinstalar completamente o servi√ßo!
set /p confirm="Tem certeza? (S/N): "
if /i "%confirm%"=="S" (
    echo üóëÔ∏è Desinstalando servi√ßo...
    sc stop "%SERVICE_NAME%" >nul 2>&1
    timeout /t 3 /nobreak >nul
    sc delete "%SERVICE_NAME%"
    if %errorlevel% == 0 (
        echo ‚úÖ Servi√ßo desinstalado com sucesso
        echo ‚ÑπÔ∏è Os arquivos em C:\gym-pulse-production foram mantidos
    ) else (
        echo ‚ùå Erro ao desinstalar servi√ßo
    )
) else (
    echo ‚ùå Desinstala√ß√£o cancelada
)
goto MENU

:VIEW_LOGS
echo.
echo üìù Monitorando logs em tempo real...
echo Pressione Ctrl+C para voltar ao menu
echo.
if exist "C:\gym-pulse-production\logs\production.log" (
    powershell -Command "Get-Content 'C:\gym-pulse-production\logs\production.log' -Wait -Tail 20"
) else (
    echo ‚ö†Ô∏è Arquivo de log n√£o encontrado
    echo Verificando logs do sistema Windows...
    powershell -Command "Get-WinEvent -LogName Application | Where-Object {$_.ProviderName -like '*Node*' -or $_.Message -like '*Gym*Pulse*'} | Select-Object TimeCreated, LevelDisplayName, Message | Format-Table -Wrap"
)
goto MENU

:TEST_APP
echo.
echo üß™ Executando teste completo da aplica√ß√£o...
call testar-aplicacao.bat
goto MENU

:EXIT
echo.
echo üëã Saindo do gerenciador...
echo ‚ÑπÔ∏è O servi√ßo continuar√° rodando em segundo plano
exit /b 0
